{"version":3,"sources":["components/layout/LoginButton.js","components/layout/Header.js","components/layout/SideNav.js","components/apps/saved/SavedLineups.js","components/apps/display/DisplayControlPanel.js","components/apps/display/DisplayLineups.js","components/apps/display/Display.js","components/apps/generate/PlayerProjections.js","components/apps/generate/GeneratedLineupDisplay.js","components/apps/generate/PositionTabs.js","components/apps/generate/GenerateControlPanel.js","components/apps/generate/Generate.js","components/layout/AppContent.js","components/layout/Home.js","components/layout/Login.js","App.js","serviceWorker.js","index.js"],"names":["LoginButton","props","className","to","loggedIn","onClick","setLoggedIn","setDisplayLoginPage","Header","SideNav","SavedLineups","DisplayControlPanel","DisplayLineups","Display","PlayerProjections","console","log","data","map","player","key","id","name","salary","defaultValue","proj_points","GeneratedLineupDisplay","Object","entries","generatedLineupData","length","constructor","PositionTabs","useState","playerData","QB","activeTabData","setActiveTabData","showPlayersData","setShowPlayersData","clickedPosTab","e","position","role","style","paddingLeft","GenerateControlPanel","type","setGenerateLineups","dummyPlayerData","RB","WR","TE","DEF","dummyGeneratedLineups","lineups","lineup_id","players","player_name","team","dk_points","lineup_points","Generate","generateLineups","setGeneratedLineupData","useEffect","AppContent","path","component","Home","exact","Login","email","setEmail","password","setPassword","error","setError","onSubmit","event","preventDefault","aria-describedby","placeholder","onChange","target","value","color","App","displayLoginPage","API_URL","process","REACT_APP_PROD_API_URL","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d85ebbad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nexport default function LoginButton(props) {\r\n  const fakeLogin = () => {\r\n    if (props.loggedIn) {\r\n      props.setLoggedIn(!props.loggedIn);\r\n      props.setDisplayLoginPage(false);\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      props.setDisplayLoginPage(true);\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul className=\"navbar-nav px-3\">\r\n      <li className=\"nav-item text-nowrap\">\r\n        <Link\r\n          to={props.loggedIn ? \"/\" : \"/login\"}\r\n          onClick={fakeLogin}\r\n          className=\"btn nav-link\"\r\n        >\r\n          {props.loggedIn ? \"Log Out\" : \"Log In\"}\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginButton from \"./LoginButton\";\r\n\r\nexport default function Header(props) {\r\n  const sendHome = () => {\r\n    props.setDisplayLoginPage(false);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark sticky-top bg-green flex-md-nowrap p-0\">\r\n      <Link\r\n        to=\"/\"\r\n        className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n        onClick={sendHome}\r\n      >\r\n        DFS Apps\r\n      </Link>\r\n      <LoginButton\r\n        loggedIn={props.loggedIn}\r\n        setLoggedIn={props.setLoggedIn}\r\n        setDisplayLoginPage={props.setDisplayLoginPage}\r\n      />\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function SideNav() {\r\n  return (\r\n    <nav className=\"col-md-2 d-none d-md-block bg-light sidebar-sticky pl-0 pr-0\">\r\n      <NavLink to=\"/saved\" className=\"nav-link sidenav-link w-100\">\r\n        Saved Lineups\r\n      </NavLink>\r\n      <NavLink to=\"/display\" className=\"nav-link sidenav-link w-100\">\r\n        Lineup Display\r\n      </NavLink>\r\n      <NavLink to=\"/generate\" className=\"nav-link sidenav-link w-100\">\r\n        Lineup Generator\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\n/*\r\n\r\n\r\n  return (\r\n    <div className=\"App-sidenav\">\r\n      <NavLink to=\"/saved\">Saved Lineups</NavLink>\r\n      <NavLink to=\"/display\">Lineup Display</NavLink>\r\n      <NavLink to=\"/generate\">Lineup Generator</NavLink>\r\n    </div>\r\n  );\r\n\r\n*/\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SavedLineups() {\r\n  return <div>Saved</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function DisplayControlPanel(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <div>\r\n          <button className=\"btn btn-lg btn-info\">Sort</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function DisplayLineups(props) {\r\n  return <div>Lineups</div>;\r\n}\r\n","import React from \"react\";\r\nimport DisplayControlPanel from \"./DisplayControlPanel\";\r\nimport DisplayLineups from \"./DisplayLineups\";\r\n\r\nexport default function Display() {\r\n  return (\r\n    <div>\r\n      <DisplayControlPanel />\r\n      <DisplayLineups />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PlayerProjections(props) {\r\n  console.log(props);\r\n  console.log(props.data);\r\n  //   return <div>{props.data}</div>;\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-striped table-sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>Players</th>\r\n            <th>Salary</th>\r\n            <th>Projected Points</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map(player => {\r\n            return (\r\n              <tr key={player.id}>\r\n                <td>{player.name}</td>\r\n                <td>{player.salary}</td>\r\n                <td>\r\n                  <input defaultValue={player.proj_points} />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function GeneratedLineupDisplay(props) {\r\n  // check if generatedLineupData object empty\r\n  if (\r\n    Object.entries(props.generatedLineupData).length === 0 &&\r\n    props.generatedLineupData.constructor === Object\r\n  ) {\r\n    return <div>No lineups to display.</div>;\r\n  } else {\r\n    return <div>Lineups</div>;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PlayerProjections from \"./PlayerProjections\";\r\nimport GeneratedLineupDisplay from \"./GeneratedLineupDisplay\";\r\n\r\nexport default function PositionTabs(props) {\r\n  const [activeTabData, setActiveTabData] = useState(props.playerData.QB);\r\n  const [showPlayersData, setShowPlayersData] = useState(true);\r\n\r\n  const clickedPosTab = (e, position) => {\r\n    setActiveTabData(props.playerData[position]);\r\n    setShowPlayersData(true);\r\n  };\r\n\r\n  const clickedGeneratedLineupsTab = () => {\r\n    setShowPlayersData(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"nav nav-tabs app-tabs\">\r\n        <li role=\"presentation\" className=\"nav-item\">\r\n          <button\r\n            className=\"nav-link ds-white-on-blue-nav app-tab\"\r\n            onClick={e => clickedPosTab(e, \"QB\")}\r\n          >\r\n            QB\r\n          </button>\r\n        </li>\r\n        <li role=\"presentation\" className=\"nav-item\">\r\n          <button\r\n            className=\"nav-link ds-white-on-blue-nav app-tab\"\r\n            onClick={e => clickedPosTab(e, \"RB\")}\r\n          >\r\n            RB\r\n          </button>\r\n        </li>\r\n        <li role=\"presentation\" className=\"nav-item\">\r\n          <button\r\n            className=\"nav-link ds-white-on-blue-nav app-tab\"\r\n            onClick={e => clickedPosTab(e, \"WR\")}\r\n          >\r\n            WR\r\n          </button>\r\n        </li>\r\n        <li role=\"presentation\" className=\"nav-item\">\r\n          <button\r\n            className=\"nav-link ds-white-on-blue-nav app-tab\"\r\n            onClick={e => clickedPosTab(e, \"TE\")}\r\n          >\r\n            TE\r\n          </button>\r\n        </li>\r\n        <li role=\"presentation\" className=\"nav-item\">\r\n          <button\r\n            className=\"nav-link ds-white-on-blue-nav app-tab\"\r\n            onClick={e => clickedPosTab(e, \"DEF\")}\r\n          >\r\n            DEF\r\n          </button>\r\n        </li>\r\n        <li\r\n          role=\"presentation\"\r\n          className=\"nav-item\"\r\n          style={{ paddingLeft: \"100px\" }}\r\n        >\r\n          <button\r\n            className=\"nav-link ds-white-on-blue-nav app-tab\"\r\n            onClick={clickedGeneratedLineupsTab}\r\n          >\r\n            GENERATED LINEUPS\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      {showPlayersData ? (\r\n        <PlayerProjections data={activeTabData} />\r\n      ) : (\r\n        <GeneratedLineupDisplay\r\n          generatedLineupData={props.generatedLineupData}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function GenerateControlPanel(props) {\r\n  const generate = () => props.setGenerateLineups(true);\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <div>\r\n          <label className=\"control-panel-label\"># of Lineups</label>\r\n          <input type=\"text\" />\r\n        </div>\r\n        <div className=\"control-panel-button\">\r\n          <button className=\"btn btn-lg btn-info\" onClick={generate}>\r\n            Generate!\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PositionTabs from \"./PositionTabs\";\r\nimport GenerateControlPanel from \"./GenerateControlPanel\";\r\n\r\nconst dummyPlayerData = {\r\n  QB: [\r\n    { id: 1, name: \"mahomes\", salary: 7600, proj_points: 33.4 },\r\n    { id: 2, name: \"jackson\", salary: 7000, proj_points: 20.4 },\r\n    { id: 3, name: \"brady\", salary: 6500, proj_points: 18.4 }\r\n  ],\r\n  RB: [\r\n    { id: 4, name: \"mccoy\", salary: 7600, proj_points: 33.4 },\r\n    { id: 5, name: \"ingram\", salary: 7000, proj_points: 20.4 },\r\n    { id: 6, name: \"kamara\", salary: 6500, proj_points: 18.4 }\r\n  ],\r\n  WR: [\r\n    { id: 7, name: \"watkins\", salary: 7600, proj_points: 33.4 },\r\n    { id: 8, name: \"brown\", salary: 7000, proj_points: 20.4 },\r\n    { id: 9, name: \"jones\", salary: 6500, proj_points: 18.4 }\r\n  ],\r\n  TE: [\r\n    { id: 10, name: \"kelce\", salary: 7600, proj_points: 33.4 },\r\n    { id: 11, name: \"ertz\", salary: 7000, proj_points: 20.4 },\r\n    { id: 12, name: \"cook\", salary: 6500, proj_points: 18.4 }\r\n  ],\r\n  DEF: [\r\n    { id: 13, name: \"kc\", salary: 7600, proj_points: 33.4 },\r\n    { id: 14, name: \"ne\", salary: 7000, proj_points: 20.4 },\r\n    { id: 15, name: \"no\", salary: 6500, proj_points: 18.4 }\r\n  ]\r\n};\r\n\r\nconst dummyGeneratedLineups = {\r\n  lineups: [\r\n    {\r\n      lineup_id: 1,\r\n      players: [\r\n        {\r\n          player_name: \"Patrick Mahomes\",\r\n          position: \"QB\",\r\n          team: \"KC\",\r\n          dk_points: 43.8\r\n        },\r\n        {\r\n          player_name: \"Chris Carson\",\r\n          position: \"RB\",\r\n          team: \"SEA\",\r\n          dk_points: 22.8\r\n        },\r\n        {\r\n          player_name: \"Kenyan Drake\",\r\n          position: \"RB\",\r\n          team: \"MIA\",\r\n          dk_points: 12.9\r\n        },\r\n        {\r\n          player_name: \"Mike Evans\",\r\n          position: \"WR\",\r\n          team: \"TB\",\r\n          dk_points: 32.9\r\n        },\r\n        {\r\n          player_name: \"Alson Jeffrey\",\r\n          position: \"WR\",\r\n          team: \"PHI\",\r\n          dk_points: 18.2\r\n        },\r\n        {\r\n          player_name: \"Quincy Enunwa\",\r\n          position: \"WR\",\r\n          team: \"NYJ\",\r\n          dk_points: 15.9\r\n        },\r\n        {\r\n          player_name: \"Travis Kelce\",\r\n          position: \"TE\",\r\n          team: \"KC\",\r\n          dk_points: 22.1\r\n        },\r\n        {\r\n          player_name: \"Austin Ekeler\",\r\n          position: \"RB\",\r\n          team: \"LAC\",\r\n          dk_points: 18.2\r\n        },\r\n        {\r\n          player_name: \"Buccaneers\",\r\n          position: \"DEF\",\r\n          team: \"TB\",\r\n          dk_points: 15\r\n        }\r\n      ],\r\n      lineup_points: 265.8\r\n    }\r\n  ]\r\n};\r\n\r\nexport default function Generate(props) {\r\n  const [generateLineups, setGenerateLineups] = useState(false);\r\n  const [playerData, setPlayerData] = useState(dummyPlayerData);\r\n  const [generatedLineupData, setGeneratedLineupData] = useState({});\r\n  //console.log(\"here\");\r\n  //console.log(generatedLineupData);\r\n\r\n  useEffect(() => {\r\n    if (generateLineups) {\r\n      setGeneratedLineupData(dummyGeneratedLineups);\r\n    }\r\n    setGenerateLineups(false);\r\n  }, [generateLineups]);\r\n  return (\r\n    <div>\r\n      <GenerateControlPanel setGenerateLineups={setGenerateLineups} />\r\n      <PositionTabs\r\n        playerData={playerData}\r\n        generatedLineupData={generatedLineupData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport SavedLineups from \"../apps/saved/SavedLineups\";\r\nimport Display from \"../apps/display/Display\";\r\nimport Generate from \"../apps/generate/Generate\";\r\n\r\nexport default function AppContent() {\r\n  return (\r\n    <main className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4s app-content-bg\">\r\n      <Route path=\"/saved\" component={SavedLineups} />\r\n      <Route path=\"/display\" component={Display} />\r\n      <Route path=\"/generate\" component={Generate} />\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Route path=\"/\" exact>\r\n      <div className=\"content\">\r\n        <div className=\"\">Explainer</div>\r\n        <div className=\"\">Create Account section</div>\r\n      </div>\r\n    </Route>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const goodEmail = \"dadoo@x.com\";\r\n  const goodPass = \"abcdefg\";\r\n\r\n  const handleLogin = event => {\r\n    event.preventDefault();\r\n    if (email === goodEmail && password === goodPass) {\r\n      props.setLoggedIn(true);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"pt-5\">\r\n      <form onSubmit={handleLogin}>\r\n        <div className=\"form-group\">\r\n          <label>Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            placeholder=\"Enter email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            placeholder=\"Password\"\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      {error ? (\r\n        <div>\r\n          <span style={{ color: \"red\" }}>Wrong Email or Password</span>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/layout/Header\";\nimport SideNav from \"./components/layout/SideNav\";\nimport AppContent from \"./components/layout/AppContent\";\nimport Home from \"./components/layout/Home\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Login from \"./components/layout/Login\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(true); //init should be false\n  const [displayLoginPage, setDisplayLoginPage] = useState(false);\n\n  //loggedIn ? console.log(\"logged in\") : console.log(\"logged out\");\n  const API_URL =\n    process.env.NODE_ENV === \"production\"\n      ? process.env.REACT_APP_PROD_API_URL\n      : process.env.REACT_APP_DEV_API_URL;\n  console.log(API_URL);\n\n  return (\n    <Router>\n      <Header\n        loggedIn={loggedIn}\n        setLoggedIn={setLoggedIn}\n        setDisplayLoginPage={setDisplayLoginPage}\n      />\n      <div className=\"container-fluid h-100\">\n        {loggedIn ? (\n          <div className=\"row h-100\">\n            <Redirect to=\"/saved\" />\n            <SideNav />\n            <AppContent />\n          </div>\n        ) : (\n          <div className=\"row h-100 justify-content-md-center\">\n            {displayLoginPage ? <Login setLoggedIn={setLoggedIn} /> : <Home />}\n          </div>\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n/*\n\n: displayLoginPage ? (\n          <div className=\"row h-100 justify-content-md-center\">\n            <Login setLoggedIn={setLoggedIn} />\n          </div>\n        ) \n\n\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}